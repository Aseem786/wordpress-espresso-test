buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    jcenter()
    maven { url 'http://wordpress-mobile.github.io/WordPress-Android' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    useLibrary 'org.apache.http.legacy'
    dexOptions {
        jumboMode = true
        javaMaxHeapSize = "6g"
        dexInProcess = true
    }

    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        applicationId "org.wordpress.android"
        versionName "alpha-21"
        versionCode 300
        minSdkVersion 18
        targetSdkVersion 24

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    productFlavors {
        vanilla {} // used for release and beta

       zalpha { // alpha version - enable experimental features
            applicationId "org.wordpress.android"
        }
        wasabi { // "hot" version, can be installed along release, alpha or beta versions
            applicationId "org.wordpress.android.beta"
            minSdkVersion 21 // to take advantage of "fast" multi dex (pre-dex each module)
        }
    }

    buildTypes {
        release {
            // Proguard is used to shrink our apk, and reduce the number of methods in our final apk,
            // but we don't obfuscate the bytecode.
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        debug {
            minifyEnabled false
            buildConfigField "String", "APP_PN_KEY", "\"org.wordpress.android.debug.build\""
            ext.enableCrashlytics = false
        }
    }
}

dependencies {
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    // Provided by maven central
    compile('org.wordpress:mediapicker:1.2.4') {
        exclude group: 'com.android.support'
    }
    compile 'com.google.code.gson:gson:2.6.+'
    compile 'org.ccil.cowan.tagsoup:tagsoup:1.2'
    compile 'com.android.support:support-compat:24.2.0'
    compile 'com.android.support:support-core-ui:24.2.0'
    compile 'com.android.support:support-fragment:24.2.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:percent:24.2.0'
    compile 'com.google.android.gms:play-services-gcm:9.0.2'
    compile 'com.google.android.gms:play-services-auth:9.0.2'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.helpshift:android-helpshift-aar:4.4.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.automattic:rest:1.0.7'
    compile 'org.wordpress:graphview:3.4.0'
    compile 'org.wordpress:persistentedittext:1.0.1'
    compile 'org.wordpress:emailchecker2:1.1.0'
    compile 'com.yalantis:ucrop:1.5.0'
    compile 'com.github.xizzhu:simple-tool-tip:0.5.0'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.0'
    androidTestCompile 'org.objenesis:objenesis:2.1'
    androidTestCompile 'org.mockito:mockito-core:+'
    androidTestCompile 'com.squareup.okhttp:mockwebserver:2.7.5'
    // Provided by the WordPress-Android Repository
    compile 'org.wordpress:drag-sort-listview:0.6.1'
    // not found in maven central
    compile 'org.wordpress:slidinguppanel:1.0.0'
    // not found in maven central
    compile 'org.wordpress:passcodelock:1.3.0'
    // Simperium
    compile 'com.simperium.android:simperium:0.6.8'
    releaseCompile project(path: ':libs:utils:WordPressUtils', configuration: 'release')
    debugCompile project(path: ':libs:utils:WordPressUtils', configuration: 'debug')
    releaseCompile project(path: ':libs:networking:WordPressNetworking', configuration: 'release')
    debugCompile project(path: ':libs:networking:WordPressNetworking', configuration: 'debug')
    releaseCompile project(path: ':libs:analytics:WordPressAnalytics', configuration: 'release')
    debugCompile project(path: ':libs:analytics:WordPressAnalytics', configuration: 'debug')
    releaseCompile project(path: ':libs:editor:WordPressEditor', configuration: 'release')
    debugCompile project(path: ':libs:editor:WordPressEditor', configuration: 'debug')
    // Android JUnit Runner
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:24.2.0'
    // JUnit4 Rules
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Espresso core
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource

    //androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    // Espresso-web for WebView support
    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2'
    // Espresso-idling-resource for synchronization with background jobs
    androidTestCompile 'com.android.support.test.espresso:espresso-idling-resource:2.2.2'
    // Espresso-intents for validation and stubbing of Intents
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    // UiAutomator
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile files('libs/poi-3.10-FINAL.jar')
    androidTestCompile files('libs/poi-ooxml-3.10-FINAL.jar')
}

configurations.all {
    // Exclude packaged wordpress sub projects, force the use of the source project
    // (eg. use :libs:utils:WordPressUtils instead of 'org.wordpress:utils')
    exclude group: 'org.wordpress', module: 'utils'
    exclude group: 'org.wordpress', module: 'analytics'
}

task generateCrashlyticsConfig(group: "generate", description: "Generate Crashlytics config") {
    def outputFile = new File("${rootDir}/WordPress/crashlytics.properties")
    def inputFile = file("${rootDir}/WordPress/gradle.properties")
    if (!inputFile.exists()) {
        throw new StopActionException("Build configuration file:" + inputFile
                + " doesn't exist, follow README instructions")
    }
    outputs.file outputFile
    inputs.file inputFile
    doLast {
        def properties = new Properties()
        inputFile.withInputStream { stream ->
            properties.load(stream)
        }
        def crashlyticsApiKey = properties.getProperty('wp.crashlytics.apikey', '0')
        def writer = new FileWriter(outputFile)
        writer.write("""// auto-generated file from ${rootDir}/gradle.properties do not modify
apiKey=${crashlyticsApiKey}""")
        writer.close()
    }
}

// Add generateCrashlyticsConfig to all generateBuildConfig tasks (all variants)
android.applicationVariants.all { variant ->
    variant.generateBuildConfig.dependsOn(generateCrashlyticsConfig)
}

// Add properties named "wp.xxx" to our BuildConfig
android.buildTypes.all { buildType ->
    project.properties.any { property ->
        if (property.key.toLowerCase().startsWith("wp.")) {
            buildType.buildConfigField "String", property.key.replace("wp.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
    }
}

// For app signing
if (["storeFile", "storePassword", "keyAlias", "keyPassword"].count { !project.hasProperty(it) } == 0) {
    android {
        signingConfigs {
            release {
                storeFile = file(project.storeFile)
                storePassword = project.storePassword
                keyAlias = project.keyAlias
                keyPassword = project.keyPassword
            }
        }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}
